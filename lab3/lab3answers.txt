3-1:
Only rotate one blade and draw the other ones as rotated(by pi/2, pi and -pi/2) copies.

??????

This could be accomplished by manual editing the position with the arrow keys.

3-2:
Keyboard implement, to move the camera around the windmill.

We can technically have the camera stationary and just move the entire world instead.

3-3:
We used the same camera matrix for the skybox, but we zeroed out the translations.

We handled each object as a unique object with unique matrices. It's not good to do this if there are many objects in the scene.

We rotate the skybox together with the world, as the camera is stationary. What we don't do is to move the skybox in any direction while the world moves.

It doesn't have a floor!

3-4:
We do camera position - surface coordinate, but since we work in view coordinates, the camera is always 0,0,0.
So the surface-eye coordinate simply is (-surface coordinate)

The normal vector is the only one we re-normalize, the rest is only normalized in the frag shader.
We also normalize the lights coordinates and the surface position in the frag shader.

3-5:
We multiply them in before applying it to out_Color.

We took the texture coordinates of the bunny and divided it into two textures (x>y).
